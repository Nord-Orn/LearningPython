# Данные. Операции с данными ///
# ////////////////////////////
# ==========================================================================
#  Типы данных:
# ==========================================================================
#   int
#  Целые положительные или отрицательные числа: -35, 0, 24, 123467890033373747428
a = 256
print(type(a))  # <class 'int'>
# ----------------------------------------------------------------------------
# float - Числа с плавающей точкой
# Дробные числа: 3.14, 2.5, -2.33333, 0.12334
a = 56.25
print(type(a))  # <class 'float'>
# -----------------------------------------------------------------------------
# str - Строки
# Строки «asdf», «Hello world», «123456»
a = 'asdf Hello world 123456'
print(type(a))  # <class 'str'>
# -----------------------------------------------------------------------------
#  list - Списки.
#  последовательность элементов: [«hello», -123, 0.34, «345»]
a = ['hello', -123, 0.34, '345']
print(type(a))  # <class 'list'>
# -----------------------------------------------------------------------------
#  dict - Словарь
# Последовательность пар элементов содержаших ключ-значение (key-value):
# {«Language»: «Python», «Version»: «3.8»}
a = {'Language': 'Python', 'Version': '3.8'}
print(type(a))  # <class 'dict'>
# -----------------------------------------------------------------------------
#  tuple - Кортеж (Tuple)
# Неизменяемая упорядоченная последовательность элементов:
# («hostname», 1234, -0.45, -32)
a = ('hostname', 1234, -0.45, -32)
print(type(a))  # <class 'tuple'>
# -----------------------------------------------------------------------------
#  set - Множество
# Изменяемая неупоряоченная последовательность элементов:
# {10, «Name», -30, 4.02, 100}
a = {10, 'Name', -30, 4.02, 100}
print(type(a))  # <class 'set'>
# -----------------------------------------------------------------------------
# bool - Булевые значения
# Тип данных принимающий одно из двух значений
# true - истина false - ложь
a = 9 < 7
print(a)  # False
print(type(a))  # <class 'bool'>
a = 9 > 7
print(a)  # True
print(type(a))  # <class 'bool'>
# ==========================================================================
#  Операции с данными:
# ==========================================================================
# Сложение (+)
# Вычитание (-)
# Умножение (*)
# Деление (/)
# Возведение в степень (**)
# Деление без остатка (//)
# Деление по модулю (остаток от деления) (%)
# -----------------------------------------------------------------------------
# Операторы сравнения
# -----------------------------------------------------------------------------
# Меньше (<)
# Больше (>)
# Меньше или равно (<=)
# Больше или равно (>=)
# Равно (==)
# Не равно (!=)
# -----------------------------------------------------------------------------
# Операторы присваивания
# -----------------------------------------------------------------------------
# Присваивание (=)
# Сложение и присваивание (+=)
# Вычитание и присваивание (-=)
# Деление и присваивание (/=)
# Умножение и присваивание (*=)
# Деление по модулю и присваивание (%=)
# Возведение в степень и присваивание (**=)
# Деление с остатком и присваивание (//=)
# -----------------------------------------------------------------------------
# Логические операторы Python
# -----------------------------------------------------------------------------
# И (and)
# Или (or)
# Не (not)
# -----------------------------------------------------------------------------
# Операторы принадлежности
# -----------------------------------------------------------------------------
# В (in)
# Нет в (not in)
# -----------------------------------------------------------------------------
# Операторы тождественности
# -----------------------------------------------------------------------------
# Это (is)
# Это не (is not)
# -----------------------------------------------------------------------------
# Битовые операторы Python
# -----------------------------------------------------------------------------
# Бинарное И (&)
# Бинарное ИЛИ (|)
# Бинарное ИЛИ НЕТ (^)
# Инвертирующий оператор (~)
# Бинарный сдвиг влево (<<)
# Бинарный сдвиг вправо (>>)
# ==========================================================================
#  Встроенные математические функции:
# ==========================================================================
# >>> abs(-3) ## возвращает абсолютное значение числа (модуль)
# 3
# >>> max(1, 2, 3) ## возвращает максимальное значение последовательности
# 3
# >>> min(1, 2, 3) ## возвращает минимальное значение последовательности
# 1
# >>> round(3.14) ## округляет вещественное число до ближайшего целого
# 3
# >>> round(3.14, 1) ## округляет вещественное число до заданного количества знаков после запятой
# 3.1
# >>> sum([1, 2, 3]) ## возвращает сумму последовательности чисел
# 6
# ==========================================================================
#  Сложные математические функции:
# ==========================================================================
import math

# -------------------
a = math.sqrt(16)
print(a)  # 4
# --------------------
a = math.pow(2, 3)
print(a)  # 8.0
# --------------------
a = math.pi
print(a)  # 3.141592653589793
# --------------------
a = math.e
print(a)  # 2.718281828459045
# --------------------
a = math.sin(math.pi / 2)
print(a)  # 1.0
# --------------------
a = math.cos(math.pi)
print(a)  # -1.0
# --------------------
a = math.tan(math.pi / 4)
print(a)  # 1.0
# --------------------
a = math.log(10)
print(a)  # 2.302585092994046
# --------------------
a = math.log10(10)
print(a)  # 1.0
